version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ticketing_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: ticketing_db
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ticketing_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: sh -c "npm install && sleep 5 && npm run dev"
    restart: unless-stopped

  # Frontend React App
  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:4000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    restart: unless-stopped

volumes:
  postgres_data: 